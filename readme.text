Q. Explain ways to connect database to Springboot Application?

1. Approach 1 : Using application.properties/yaml (Straight-forward)

- In the application.properties file, define the database related properties

spring.datasource.url = The URL of your database
spring.datasource.username = Username of your database
spring.datasource.password = Password of your database
spring.datasource.driver-class-name : The fully qualified class name of the JDBC driver.

- Implementation :

spring.datasource.url=jdbc:mysql://localhost:3304/student
spring.datasource.username=root
spring.datasource.password=root

2. Approach 2 : Using Configuration + Bean (Programmatic approach)

- Define a class with @Configuration class

- Define a method mark it @Bean to register its bean in Spring container

- This Method should return a DataSource object having a Datasource configuration details

- Implementation :

@Configuration
public class DatabaseConfiguration {

    @Bean
    public DriverManagerDataSource databaseConnection() {
        DriverManagerDataSource ds = new DriverManagerDataSource();
        ds.setUrl("jdbc:mysql://localhost:3304/student");
        ds.setUsername("root");
        ds.setPassword("root");
        return ds;
    }
}

!Configuration - An annotation that tells this class has multiple Beans defined that are
to be created and managed by Spring Container

They are automatically register because of @ComponentScan annotation.

It can refer to properties present in the properties file by Autowiring an instance of
Environment or using @Value annotation to fetch values

We can also use one configuration bean into another using @Import annotation.

